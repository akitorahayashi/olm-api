[tool.poetry]
name = "pvt-llm-api"
version = "0.1.0"
description = "A local LLM wrapped as an API for reusable access."
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{ include = "*", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
fastapi = ">=0.116.1,<0.117.0"
jinja2 = ">=3.1.4,<4.0.0"
uvicorn = ">=0.35.0,<0.36.0"
ollama = ">=0.5.3,<0.6.0"
pydantic-settings = ">=2.4.0,<3.0.0"
sqlalchemy = ">=2.0.29,<3.0.0"
alembic = ">=1.13.1,<2.0.0"
psycopg = { version = ">=3.1,<4.0", extras = ["binary"] }

[tool.poetry.group.dev.dependencies]
ipython = "^9.4.0"
ruff = "^0.12.10"
black = "^25.1.0"
pytest = "^8.4.1"
pytest-asyncio = "^0.23.7"
watchdog = { extras = ["watchmedo"], version = "^4.0.1" }
testcontainers = {extras = ["postgres"], version = "^4.6.0"}
python-dotenv = ">=1.0.0,<2.0.0"
httpx = ">=0.27.0,<0.28.0"
filelock = ">=3.12.2,<4.0.0"
pytest-xdist = "^3.8.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
python_files = "test_*.py"
testpaths = ["tests/unit"]
asyncio_mode = "auto"

[tool.black]
target-version = ['py312']
exclude = '''
/(\
    \.git
    | \.mypy_cache
    | \.venv
    | build
    | dist
)/
'''

[tool.ruff]
target-version = "py312"
extend-exclude = [
    ".venv",
    "__pycache__",
    "migrations",
    "alembic",
    "db.sqlite3",
    "*.pyc"
]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"] # E501 (line too long) is ignored

[tool.alembic]
script_location = "alembic"
prepend_sys_path = "."
path_separator = "os"
