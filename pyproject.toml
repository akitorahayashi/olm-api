[project]
name = "olm-api"
version = "2.2.0"
description = "Enabling API access to a live Ollama model."
authors = [{ name = "akitorahayashi", email = "atora.has75@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "alembic>=1.13.1,<2.0.0",
    "fastapi>=0.116.1,<0.117.0",
    "httpx>=0.27.0,<0.28.0",
    "jinja2>=3.1.4,<4.0.0",
    "ollama>=0.5.3,<0.6.0",
    "psycopg[binary]>=3.1,<4.0",
    "pydantic-settings>=2.4.0,<3.0.0",
    "sqlalchemy>=2.0.29,<3.0.0",
    "uvicorn>=0.35.0,<0.36.0",
    "uvloop>=0.19.0,<0.20.0",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "filelock>=3.12.2,<4.0.0",
    "ipython>=9.4.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=0.23.7",
    "pytest-xdist>=3.8.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "ruff>=0.12.10",
    "testcontainers[postgres]>=4.6.0",
    "watchdog[watchmedo]>=4.0.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["sdk", "src"]

[tool.pytest.ini_options]
python_files = "test_*.py"
asyncio_mode = "auto"
pythonpath = ["src", "sdk"]

[tool.black]
target-version = ['py312']
exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.venv
    | venv
    | env
    | build
    | dist
    | .*/(bin|lib|share|etc)
    | .*/pyvenv\.cfg
)/
'''

[tool.ruff]
target-version = "py312"
exclude = [
	"__pycache__",
	"migrations",
	"db.sqlite3",
	"*.pyc",
	".venv",
	"venv",
	"env",
	"*/bin/**",
	"*/lib/**",
	"*/share/**",
	"*/etc/**",
	"*/pyvenv.cfg"
]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"] # E501 (line too long) is ignored

[tool.alembic]
script_location = "alembic"
prepend_sys_path = "."
path_separator = "os"
