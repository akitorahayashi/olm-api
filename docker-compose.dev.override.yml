# Development override - includes built-in Ollama service
# Switch between container and host Ollama by changing OLLAMA_HOST in .env.dev:
# - Container Ollama: OLLAMA_HOST=http://ollama:11434  
# - Host Ollama: OLLAMA_HOST=http://host.docker.internal:11434
services:
  db:
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data

  # Built-in Ollama service (always created for easy switching)
  ollama:
    image: ollama:latest
    build:
      context: ./ollama
      args:
        - BUILT_IN_OLLAMA_MODEL=${BUILT_IN_OLLAMA_MODEL}
    entrypoint: ollama
    command: serve
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_NUM_PARALLEL=${OLLAMA_NUM_PARALLEL:-2}
      - OLLAMA_MAX_LOADED_MODELS=${OLLAMA_MAX_LOADED_MODELS:-1}
    volumes:
      - ollama_data_dev:/root/.ollama
    healthcheck:
      test: [ "CMD", "ollama", "list" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  api:
    build:
      target: runner
    volumes:
      - ./src:/app/src
      # Also mount alembic files for development
      - ./alembic:/app/alembic
      # Mount tests so they can be run inside the container if needed
      - ./tests:/app/tests
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy
    # OLLAMA_HOST is read from .env.dev - change it there to switch between container/host
    # Use default entrypoint
    command: []

volumes:
  postgres_data_dev:
    driver: local
  ollama_data_dev:
    driver: local
